{"is_source_file": true, "format": "Python", "description": "This file defines custom error classes and exception handlers for a FastAPI application, including application-specific errors, validation errors, and a generic fallback error handler.", "external_files": ["fastapi", "fastapi.responses", "pydantic", "starlette.status", ".logging"], "external_methods": ["generate_trace_id", "get_logger"], "published": ["app_error_handler", "validation_error_handler", "generic_500_handler"], "classes": [{"name": "AppError", "description": "Base custom exception class supporting error code, message, details, status code, and trace ID."}, {"name": "NotFoundError", "description": "Specific error subclass indicating a resource was not found, with HTTP 404 status."}], "methods": [{"name": "JSONResponse app_error_handler(request: Request, exc: AppError)", "description": "FastAPI handler for AppError exceptions, returning a JSON error response.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse validation_error_handler(request: Request, exc: PydanticValidationError)", "description": "FastAPI handler for Pydantic validation errors, normalizing them into a unified error format.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse generic_500_handler(request: Request, exc: Exception)", "description": "Fallback handler for unexpected exceptions, providing a generic 500 error response.", "scope": "", "scopeKind": ""}, {"name": "None __init__( self, message: str, *, code: str = \"app_error\", status_code: int = status.HTTP_400_BAD_REQUEST, details: Optional[Union[Dict[str, Any], Any]] = None, trace_id: Optional[str] = None, )", "scope": "AppError", "scopeKind": "class", "description": "unavailable"}, {"name": "None __init__(self, message: str = \"Resource not found\", *, details: Optional[Any] = None)", "scope": "NotFoundError", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,Any] to_dict(self)", "scope": "AppError", "scopeKind": "class", "description": "unavailable"}], "calls": ["generate_trace_id", "get_logger", "JSONResponse", "status.HTTP_400_BAD_REQUEST", "status.HTTP_404_NOT_FOUND", "status.HTTP_422_UNPROCESSABLE_ENTITY", "status.HTTP_500_INTERNAL_SERVER_ERROR"], "search-terms": ["FastAPI error handling", "custom exceptions", "JSONResponse", "validation errors", "trace ID", "error classes"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "AppError", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/core/errors.py", "pattern": "/^class AppError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotFoundError", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/core/errors.py", "pattern": "/^class NotFoundError(AppError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PydanticValidationError", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/core/errors.py", "pattern": "/^from pydantic import ValidationError as PydanticValidationError$/", "language": "Python", "kind": "unknown", "nameref": "unknown:ValidationError"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/core/errors.py", "pattern": "/^    def __init__($/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "( self, message: str, *, code: str = \"app_error\", status_code: int = status.HTTP_400_BAD_REQUEST, details: Optional[Union[Dict[str, Any], Any]] = None, trace_id: Optional[str] = None, )", "scope": "AppError", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/core/errors.py", "pattern": "/^    def __init__(self, message: str = \"Resource not found\", *, details: Optional[Any] = None) ->/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, message: str = \"Resource not found\", *, details: Optional[Any] = None)", "scope": "NotFoundError", "scopeKind": "class"}, {"_type": "tag", "name": "app_error_handler", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/core/errors.py", "pattern": "/^async def app_error_handler(request: Request, exc: AppError) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(request: Request, exc: AppError)"}, {"_type": "tag", "name": "generic_500_handler", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/core/errors.py", "pattern": "/^def generic_500_handler(request: Request, exc: Exception) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(request: Request, exc: Exception)"}, {"_type": "tag", "name": "to_dict", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/core/errors.py", "pattern": "/^    def to_dict(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "AppError", "scopeKind": "class"}, {"_type": "tag", "name": "validation_error_handler", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/core/errors.py", "pattern": "/^async def validation_error_handler(request: Request, exc: PydanticValidationError) -> JSONRespon/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(request: Request, exc: PydanticValidationError)"}], "hash": "144de8f0a7c909dbced475641c85a873", "format-version": 4, "code-base-name": "fastapi_backend_agent", "filename": "fastapi_backend_agent/src/core/errors.py", "revision_history": [{"17": ""}]}