{"is_source_file": true, "format": "Python", "description": "This file implements API route handlers for managing 'records' in a FastAPI application, including listing, retrieving, creating, updating, and deleting records. It features parsing of query filters, dependency injection, and integrates with data repositories and models.", "external_files": ["...core/dependencies.py", "...core/errors.py", "...data/repositories/records_repository.py", "...models.py"], "external_methods": ["get_logger", "AppError", "NotFoundError", "RecordsRepository.list_records", "RecordsRepository.get_record_by_id", "RecordsRepository.create_record", "RecordsRepository.update_record", "RecordsRepository.delete_record"], "published": ["list_records", "get_record", "create_record", "update_record", "delete_record", "DeleteResponse"], "classes": [{"name": "DeleteResponse", "description": "Response model indicating success of delete operation with record ID."}], "methods": [{"name": "Optional[Dict[str,Any]] _parse_filters(filters: Optional[list[str]])", "description": "Parses list of 'key=value' strings into a dictionary, ignoring invalid entries.", "scope": "", "scopeKind": ""}, {"name": "PaginatedRecords list_records( page: int = Query(1, ge=1, description=\"Page number starting at 1\"), page_size: int = Query(20, ge=1, le=100, description=\"Items per page\"), sort_by: str = Query(\"created_at\", description=\"Field to sort by\"), sort_dir: SortDirection = Query(SortDirection.desc, description=\"Sort direction\"), q: Optional[str] = Query(None, description=\"Free-text search across title and description\"), filters: Optional[list[str]] = Query( default=None, description=\"Optional list of simple filter expressions in the form field=value. Allowed fields: id, title, created_at.\", ), logger=Depends(get_logger), )", "description": "Endpoint to list records with pagination, filtering, search, and sorting.", "scope": "", "scopeKind": ""}, {"name": "RecordOut get_record( id: str = Path(..., description=\"Record ID\"), logger=Depends(get_logger), )", "description": "Endpoint to retrieve a specific record by its ID.", "scope": "", "scopeKind": ""}, {"name": "RecordOut create_record( payload: RecordCreate, logger=Depends(get_logger), )", "description": "Endpoint to create a new record.", "scope": "", "scopeKind": ""}, {"name": "RecordOut update_record( id: str = Path(..., description=\"Record ID\"), payload: RecordUpdate = ..., logger=Depends(get_logger), )", "description": "Endpoint to update a record partially by its ID.", "scope": "", "scopeKind": ""}, {"name": "DeleteResponse delete_record( id: str = Path(..., description=\"Record ID\"), logger=Depends(get_logger), )", "description": "Endpoint to delete a record by its ID.", "scope": "", "scopeKind": ""}], "calls": ["RecordsRepository.list_records", "RecordsRepository.get_record_by_id", "RecordsRepository.create_record", "RecordsRepository.update_record", "RecordsRepository.delete_record"], "search-terms": ["FastAPI records endpoint", "records CRUD API", "pagination and filtering", "record ID fetch", "records repository", "records route handlers", "RecordsQueryParams", "RecordOut", "RecordCreate", "RecordUpdate"], "state": 2, "file_id": 19, "knowledge_revision": 45, "git_revision": "", "ctags": [{"_type": "tag", "name": "DeleteResponse", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^class DeleteResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_parse_filters", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^def _parse_filters(filters: Optional[list[str]]) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(filters: Optional[list[str]])"}, {"_type": "tag", "name": "create_record", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^def create_record($/", "language": "Python", "typeref": "typename:RecordOut", "kind": "function", "signature": "( payload: RecordCreate, logger=Depends(get_logger), )"}, {"_type": "tag", "name": "delete_record", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^def delete_record($/", "language": "Python", "typeref": "typename:DeleteResponse", "kind": "function", "signature": "( id: str = Path(..., description=\"Record ID\"), logger=Depends(get_logger), )"}, {"_type": "tag", "name": "get_record", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^def get_record($/", "language": "Python", "typeref": "typename:RecordOut", "kind": "function", "signature": "( id: str = Path(..., description=\"Record ID\"), logger=Depends(get_logger), )"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^    id: str = Field(..., description=\"Identifier of the attempted deletion target\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "DeleteResponse", "scopeKind": "class"}, {"_type": "tag", "name": "list_records", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^def list_records($/", "language": "Python", "typeref": "typename:PaginatedRecords", "kind": "function", "signature": "( page: int = Query(1, ge=1, description=\"Page number starting at 1\"), page_size: int = Query(20, ge=1, le=100, description=\"Items per page\"), sort_by: str = Query(\"created_at\", description=\"Field to sort by\"), sort_dir: SortDirection = Query(SortDirection.desc, description=\"Sort direction\"), q: Optional[str] = Query(None, description=\"Free-text search across title and description\"), filters: Optional[list[str]] = Query( default=None, description=\"Optional list of simple filter expressions in the form field=value. Allowed fields: id, title, created_at.\", ), logger=Depends(get_logger), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "success", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^    success: bool = Field(..., description=\"True if the record was deleted\")$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "DeleteResponse", "scopeKind": "class"}, {"_type": "tag", "name": "update_record", "path": "/home/kavia/workspace/code-generation/supabase-data-access-api-5536-6800/fastapi_backend_agent/src/api/routers/records.py", "pattern": "/^def update_record($/", "language": "Python", "typeref": "typename:RecordOut", "kind": "function", "signature": "( id: str = Path(..., description=\"Record ID\"), payload: RecordUpdate = ..., logger=Depends(get_logger), )"}], "hash": "8fb231e7a3068727bca0d58453cb5769", "format-version": 4, "code-base-name": "fastapi_backend_agent", "filename": "fastapi_backend_agent/src/api/routers/records.py", "fields": [{"name": "str id", "scope": "DeleteResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool success", "scope": "DeleteResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"45": ""}]}